import os
import sys
import psycopg2
import json
import time
from dotenv import load_dotenv

load_dotenv()

dbname = os.getenv("DB_NAME")
user = os.getenv("DB_USER")
password = os.getenv("DB_PASSWORD")
host = os.getenv("DB_HOST")

if not all([dbname, user, password, host]):
    print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
    sys.exit(1)

def connect_db():
    while True:
        try:
            conn = psycopg2.connect(
                dbname=dbname,
                user=user,
                password=password,
                host=host
            )
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î!")
            return conn
        except psycopg2.OperationalError as e:
            print(f"üîÑ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            time.sleep(5)

conn = connect_db()
cur = conn.cursor()

try:
    for line in sys.stdin:
        try:
            log = json.loads(line.strip())
            cur.execute(
                """
                INSERT INTO nginx_logs 
                (time_local, remote_addr, request, status, body_bytes_sent, http_referer, http_user_agent) 
                VALUES (%s, %s, %s, %s, %s, %s, %s)
                """,
                (
                    log.get('time_local'),
                    log.get('remote_addr'),
                    log.get('request'),
                    log.get('status'),
                    log.get('body_bytes_sent'),
                    log.get('http_referer', ''),
                    log.get('http_user_agent', '')
                )
            )
            conn.commit()
            print("‚úÖ –õ–æ–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ –ë–î.")

        except json.JSONDecodeError:
            print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON —Ñ–æ—Ä–º–∞—Ç.")
        except psycopg2.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ë–î: {e}")
            conn.rollback()

except KeyboardInterrupt:
    print("‚èπ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")

finally:
    cur.close()
    conn.close()
    print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")